import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv('BOT_TOKEN')
CHAT_ID = os.getenv('CHAT_ID')

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–∞–ª—å—è–Ω—â–∏–∫–∞
def get_hookah_keyboard():
    keyboard = [
        [InlineKeyboardButton("üî• –ü–æ–º–µ–Ω—è—Ç—å —É–≥–ª–∏", callback_data="coals")],
        [InlineKeyboardButton("üí® –ü–µ—Ä–µ–∑–∞–±–∏—Ç—å –∫–∞–ª—å—è–Ω", callback_data="reload")],
        [InlineKeyboardButton("üìù –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑", callback_data="order")],
        [InlineKeyboardButton("üö® –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å", callback_data="emergency")],
        [InlineKeyboardButton("‚úèÔ∏è –î—Ä—É–≥–æ–µ", callback_data="other")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
def get_menu_keyboard():
    keyboard = [
        [InlineKeyboardButton("üçì –ö–ª—É–±–Ω–∏—á–Ω—ã–π –º–∏–∫—Å", callback_data="mix_strawberry")],
        [InlineKeyboardButton("üçâ –ê—Ä–±—É–∑–Ω—ã–π —á–∏–ª", callback_data="mix_watermelon")],
        [InlineKeyboardButton("‚ùÑÔ∏è –ú—è—Ç–Ω–∞—è —Å–≤–µ–∂–µ—Å—Ç—å", callback_data="mix_mint")],
        [InlineKeyboardButton("üçè –Ø–±–ª–æ—á–Ω—ã–π –ª–µ–¥", callback_data="mix_apple")],
        [InlineKeyboardButton("üåü –ú–µ–≥–∞—Å Special", callback_data="mix_special")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üéØ –ü—Ä–∏–≤–µ—Ç! –Ø –ï–≥–∞ –∏–∑ –ú–µ–≥–∞—Å–∞\n"
        "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=get_hookah_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    reasons = {
        "coals": "üî• –ü–æ–º–µ–Ω—è—Ç—å —É–≥–ª–∏",
        "reload": "üí® –ü–µ—Ä–µ–∑–∞–±–∏—Ç—å –∫–∞–ª—å—è–Ω", 
        "order": "üìù –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑",
        "emergency": "üö® –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å",
        "other": "‚úèÔ∏è –î—Ä—É–≥–æ–µ"
    }
    
    if query.data in reasons:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –∫–∞–ª—å—è–Ω—â–∏–∫–æ–≤
        message = f"üéØ –í–´–ó–û–í –ö–ê–õ–¨–Ø–ù–©–ò–ö–ê\n–ü—Ä–∏—á–∏–Ω–∞: {reasons[query.data]}\n–°—Ç–æ–ª: {query.from_user.id}"
        
        await context.bot.send_message(
            chat_id=CHAT_ID,
            text=message
        )
        
        await query.edit_message_text(f"‚úÖ –ö–∞–ª—å—è–Ω—â–∏–∫ –≤—ã–∑–≤–∞–Ω! –ü—Ä–∏—á–∏–Ω–∞: {reasons[query.data]}")
    
    elif query.data.startswith('mix_'):
        mixes = {
            "mix_strawberry": "üçì –ö–ª—É–±–Ω–∏—á–Ω—ã–π –º–∏–∫—Å",
            "mix_watermelon": "üçâ –ê—Ä–±—É–∑–Ω—ã–π —á–∏–ª", 
            "mix_mint": "‚ùÑÔ∏è –ú—è—Ç–Ω–∞—è —Å–≤–µ–∂–µ—Å—Ç—å",
            "mix_apple": "üçè –Ø–±–ª–æ—á–Ω—ã–π –ª–µ–¥",
            "mix_special": "üåü –ú–µ–≥–∞—Å Special"
        }
        
        await query.edit_message_text(f"‚úÖ –ó–∞–∫–∞–∑–∞–Ω: {mixes[query.data]}\n–ö–∞–ª—å—è–Ω—â–∏–∫ —É–∂–µ –≥–æ—Ç–æ–≤–∏—Ç!")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token(BOT_TOKEN).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    
    app.run_polling()

if __name__ == "__main__":
    main()
